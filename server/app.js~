'use strict';

// Module dependencies.
var express = require('express');
var bodyParser = require('body-parser');
var path          = require('path');
var logger = require('morgan');
var errorHandler = require('errorhandler');

// Create Express server.
var app = express();
var chaincodeId = '';

// Express configuration.
app.set('port', process.env.PORT || 3000);
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Serve client part
app.use(express.static(path.join(__dirname, '/client')));

// Error Handler.
app.use(errorHandler());

// Start Express server.
app.listen(app.get('port'), () => {
    console.log('Express server listening on port %d in %s mode',
		app.get('port'), app.get('env'));
});

var router = express.Router();
app.use('/', router);

router.use('/api-example02', require('./api-example02'));
router.use('/test', (req, res) => {
    var Chaincode = require('./chaincode');
    var chaincode = new Chaincode('http://localhost:17050',
				  'github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02',
				  ["a", "100", "b", "200"]);
    chaincode.deploy().then((r) => {
	res.json(r);
	console.log('deployed callback');

	chaincode.query.toto('a').then((r) => {
	    res.json(r);
	});

    });


});

router.use('/testQuery', (req, res) => {
    var Chaincode = require('./chaincode');
    var chaincode = new Chaincode('http://localhost:17050',
				  'github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02',
				  ["a", "100", "b", "200"]);

});

module.exports = app;
